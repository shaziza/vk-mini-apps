{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SSRWrapper = exports.SSRContext = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _platform = require(\"./platform\");\n\nvar SSRContext = /*#__PURE__*/(0, _react.createContext)({\n  platform: null,\n  userAgent: ''\n});\nexports.SSRContext = SSRContext;\n\nvar SSRWrapper = function SSRWrapper(props) {\n  var userAgent = props.userAgent,\n      children = props.children; // TODO: Каждый раз создаётся новый объект для контекста – плохо\n\n  var contextValue = {\n    platform: (0, _platform.platform)(userAgent),\n    userAgent: userAgent\n  };\n  return /*#__PURE__*/_react.default.createElement(SSRContext.Provider, {\n    value: contextValue\n  }, children);\n};\n\nexports.SSRWrapper = SSRWrapper;","map":{"version":3,"sources":["../../src/lib/SSR.tsx"],"names":["SSRContext","platform","userAgent","SSRWrapper","children","props","contextValue"],"mappings":";;;;;;;;;AAAA,IAAA,MAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,SAAA,GAAA,OAAA,CAAA,YAAA,CAAA;;AAOO,IAAMA,UAAU,GAAA,aAAG,CAAA,GAAA,MAAA,CAAA,aAAA,EAAmC;AAC3DC,EAAAA,QAAQ,EADmD,IAAA;AAE3DC,EAAAA,SAAS,EAAE;AAFgD,CAAnC,CAAnB;;;AASA,IAAMC,UAA+B,GAAG,SAAlCA,UAAkC,CAAA,KAAA,EAAW;AAAA,MAChDD,SADgD,GACxBG,KADwB,CAAA,SAAA;AAAA,MACrCD,QADqC,GACxBC,KADwB,CAAA,QAAA,CAAA,CAGxD;;AACA,MAAMC,YAAY,GAAG;AACnBL,IAAAA,QAAQ,EAAE,CAAA,GAAA,SAAA,CAAA,QAAA,EADS,SACT,CADS;AAEnBC,IAAAA,SAAS,EAATA;AAFmB,GAArB;AAKA,SAAA,aACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,UAAD,CAAA,QAAA,EAAA;AAAqB,IAAA,KAAK,EAAEI;AAA5B,GAAA,EADF,QACE,CADF;AATK,CAAA","sourcesContent":["import React, { createContext, FC } from 'react';\nimport { OSType, platform } from './platform';\n\nexport interface SSRContextInterface {\n  platform: OSType;\n  userAgent?: string;\n}\n\nexport const SSRContext = createContext<SSRContextInterface>({\n  platform: null,\n  userAgent: '',\n});\n\nexport interface SSRWrapperProps {\n  userAgent?: string;\n}\n\nexport const SSRWrapper: FC<SSRWrapperProps> = (props) => {\n  const { userAgent, children } = props;\n\n  // TODO: Каждый раз создаётся новый объект для контекста – плохо\n  const contextValue = {\n    platform: platform(userAgent),\n    userAgent,\n  };\n\n  return (\n    <SSRContext.Provider value={contextValue}>\n      {children}\n    </SSRContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"script"}